@model Blog
@{
    ViewData["Title"] = "Edit";
}

<style>
    body {
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 0;
    }

    .container {
        max-width: 800px;
        margin: 0 auto;
        padding: 20px;
    }

    label {
        font-weight: bold;
    }

    input[type="text"],
    textarea {
        width: 100%;
        padding: 10px;
        margin-top: 5px;
        margin-bottom: 15px;
        border: 1px solid #ccc;
        border-radius: 5px;
        box-sizing: border-box;
    }

    input[type="submit"] {
        background-color: #007bff;
        color: #fff;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

        input[type="submit"]:hover {
            background-color: #0056b3;
        }
</style>

<div class="container">

    <h2>Edit Blog Post</h2>

    <form id="editForm">
        <div style="display: none">
            <input type="text" id="id" name="Id" value="@Model.Id">
        </div>
        <div>
            <label for="title">Title:</label>
            <input type="text" id="title" name="title" value="@Model.Title">
        </div>
        <div>
            <label for="author">Author Name:</label>
            <input type="text" id="authorName" name="authorName" value="@Model.AuthorName">
        </div>
        <div>
            <label for="description">Description:</label>
            <input type="text" id="description" name="description" value="@Model.Description">
        </div>
        <div>
            <label for="content">Content:</label>
            <textarea id="content" name="content" rows="6">@Model.Content</textarea>
        </div>
        <div>
            <input type="submit" value="Save Changes">
        </div>
    </form>

</div>

@section Scripts {
    <script>
        document.getElementById('editForm').addEventListener('submit', function (event) {
            event.preventDefault();

            const formData = new FormData(this);

            fetch('/api/Blog/Update', {
                method: 'POST',
                body: formData
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    alert('Success');
                })
                .catch(error => {
                    alert('Error:', error);
                });
        });
    </script>
}